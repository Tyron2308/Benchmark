version: '2'
services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    restart: unless-stopped
    networks:
      - monitoring

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '30000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    restart: unless-stopped
    networks:
      - monitoring

  jmx_exporter:
    image: jmx_exporter
    container_name: jmx_exporter
    depends_on:
      - influxdb
    ports: 
      - 5556:5556
      - 9096:9096
    networks:
      - monitoring

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: unless-stopped
    depends_on:
      - influxdb
      - grafana
      - jmx_exporter
    #extra_hosts:
     #- "influxdb:192.168.0.7;k3"
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
      TELEGRAF_USER: ${TELEGRAF_USERNAME}
      TELEGRAF_PASSWORD: ${TELEGRAF_PASSWORD}
    hostname: telegraf
    volumes:
     - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /sys:/rootfs/sys:ro
     - /proc:/rootfs/proc:ro
     - /etc:/rootfs/etc:ro
    networks:
      - monitoring
 
  #nginx: 
    #image: nginx:latest
    #container_name: nginx
    #depends_on:
      #- grafana
    #volumes:
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
    #ports:
      #- 30000:30000
      #- 443:443
    #networks:
      #- monitoring

networks:
  monitoring:

volumes:
  influxdb-storage:
  chronograf-storage:
  grafana-storage:
